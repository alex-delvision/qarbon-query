events {
    worker_connections 1024;
}

http {
    upstream api_gateway {
        server host.docker.internal:3000;
    }

    upstream web_dashboard {
        server host.docker.internal:3001;
    }

    upstream developer_portal {
        server host.docker.internal:3002;
    }

    upstream enterprise_app {
        server host.docker.internal:3003;
    }

    upstream mock_carbon_api {
        server mock-carbon-api:3004;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:10m rate=30r/s;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # API Gateway
    server {
        listen 80;
        server_name api.qarbon.local localhost;

        location / {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 200;
            }
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Web Dashboard
    server {
        listen 80;
        server_name dashboard.qarbon.local;

        location / {
            limit_req zone=web burst=50 nodelay;
            proxy_pass http://web_dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Developer Portal
    server {
        listen 80;
        server_name docs.qarbon.local;

        location / {
            limit_req zone=web burst=30 nodelay;
            proxy_pass http://developer_portal;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Enterprise App
    server {
        listen 80;
        server_name enterprise.qarbon.local;

        location / {
            limit_req zone=web burst=30 nodelay;
            proxy_pass http://enterprise_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Mock Carbon API
    server {
        listen 80;
        server_name mock-api.qarbon.local;

        location / {
            limit_req zone=api burst=15 nodelay;
            proxy_pass http://mock_carbon_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
