name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  CACHE_KEY: v1

jobs:
  test-emissions:
    name: AI Emissions Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install emissions dependencies
        run: |
          cd packages/@qarbon/emissions
          npm install
      
      - name: Build emissions package
        run: |
          cd packages/@qarbon/emissions
          npm run build

      - name: Run AI emissions unit tests
        run: |
          cd packages/@qarbon/emissions
          npm test -- --verbose --coverage
        env:
          CI: true

      - name: Verify GPT-3.5 emissions calculation
        run: |
          cd packages/@qarbon/emissions
          npm test -- --testNamePattern="should calculate ≈2.2g CO2e for 1000 tokens"
        env:
          CI: true

      - name: Upload emissions test coverage
        uses: codecov/codecov-action@v3
        with:
          file: packages/@qarbon/emissions/coverage/lcov.info
          flags: emissions
          name: emissions-coverage

  test-chrome-extension:
    name: Chrome Extension API Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build chrome extension dependencies
        run: |
          cd apps/chrome-extension
          npm run build

      - name: Run API emissions integration tests
        run: |
          cd apps/chrome-extension
          npm test -- test/api-emissions.spec.ts --verbose --coverage
        env:
          CI: true

      - name: Verify ±10% emissions tolerance
        run: |
          cd apps/chrome-extension
          npm test -- --testNamePattern="should assert stored emissions within ±10% tolerance"
        env:
          CI: true

      - name: Run token extraction tests
        run: |
          cd apps/chrome-extension
          npm test -- --testNamePattern="token|extractor"
        env:
          CI: true

      - name: Upload extension test coverage
        uses: codecov/codecov-action@v3
        with:
          file: apps/chrome-extension/coverage/lcov.info
          flags: chrome-extension
          name: extension-coverage

  test-integration:
    name: Full Integration Tests
    runs-on: ubuntu-latest
    needs: [test-emissions, test-chrome-extension]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        run: npm run build

      - name: Run full test suite
        run: npm test
        env:
          CI: true

      - name: Run emissions-specific tests
        run: npm run test -- --testPathPattern="ai|emission" --verbose
        env:
          CI: true

      - name: Verify emissions calculations end-to-end
        run: |
          echo "Testing emissions calculations across all components..."
          npm run test -- --testNamePattern="emission|gpt|claude|ai" --passWithNoTests
        env:
          CI: true

  lint-and-format:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check TypeScript types
        run: npm run check-types

      - name: Check code formatting
        run: npm run format:check

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=high

      - name: Check for outdated packages
        run: npm outdated || true
